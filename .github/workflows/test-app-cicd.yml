# This workflow will build a Java project with Maven, and cache/restore any dependencies to improve the workflow execution time
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-java-with-maven

# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.

name: Java CI with Maven

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  build:

    runs-on: ubuntu-latest

    steps:
      # Checkout the code
      - name: Checkout code
        uses: actions/checkout@v3

      # Set up Java
      - name: Set up JDK
        uses: actions/setup-java@v3
        with:
          distribution: 'temurin' # Use Temurin JDK
          java-version: '17' # Specify your project's Java version

      # Cache Maven dependencies (optional, for Maven projects)
      - name: Cache Maven dependencies
        uses: actions/cache@v3
        with:
          path: ~/.m2/repository
          key: ${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}
          restore-keys: |
            ${{ runner.os }}-maven-

      # Build the project
      - name: Build with Maven
        run: mvn clean install
  test:
    runs-on: ubuntu-latest
    needs: build

    steps:
      # Checkout the code
      - name: Checkout code
        uses: actions/checkout@v3

      # Set up Java
      - name: Set up JDK
        uses: actions/setup-java@v3
        with:
          distribution: 'temurin'
          java-version: '17'

      # Start Selenium server (for Selenium Grid or local server, if needed)
      - name: Start Selenium Server (Optional)
        run: |
          docker run -d -p 4444:4444 --name selenium-hub selenium/standalone-chrome:latest

      # Run Selenium Tests
      - name: Run Selenium Tests
        run: mvn test

      # Stop Selenium server
      - name: Stop Selenium Server (Optional)
        if: always()
        run: |
          docker stop selenium-hub
          docker rm selenium-hub